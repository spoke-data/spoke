version: "3.8"

services:
  minio:
    image: quay.io/minio/minio:RELEASE.2023-07-21T21-12-44Z
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: password
    hostname: minio
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  memphis-metadata:
    image: memphisos/memphis-metadata:docker-15.2.0-debian-11-r27
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memphis -p 5005"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - memphis
    ports:
      - '5005:5005'
    environment:
      - POSTGRESQL_USERNAME=memphis
      - POSTGRESQL_PASSWORD=memphis
      - POSTGRESQL_DATABASE=memphis
      - POSTGRESQL_PORT_NUMBER=5005

  memphis:
    image: "memphisos/memphis:1.1.1"
    depends_on:
      memphis-metadata:
        condition: service_healthy
    restart: on-failure
    pull_policy: always
    networks:
      - memphis
    ports:
      - "9100:9000"
      - "6666:6666"
      - "7770:7770"
    environment:
      - ROOT_PASSWORD=password
      - DOCKER_ENV=true
      - USER_PASS_BASED_AUTH=true
      - CONNECTION_TOKEN=memphis
      - METADATA_DB_HOST=memphis-metadata
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: wget http://127.0.0.1:9000 --spider || exit 1
      interval: 10s
      retries: 30
      start_period: 5s
      
  memphis-rest-gateway:
    image: "memphisos/memphis-rest-gateway:1.0.3"
    depends_on:
      memphis:
        condition: service_healthy
    restart: on-failure
    pull_policy: always
    networks:
      - memphis
    ports:
      - "4444:4444"
    environment:
      - JWT_SECRET=JWT_TEST_PURPOSE
      - REFRESH_JWT_SECRET=REFRESH_JWT_TEST_PURPOSE
      - USER_PASS_BASED_AUTH=true
      - CONNECTION_TOKEN=memphis
      - ROOT_USER=root
      - ROOT_PASSWORD=memphis
      - MEMPHIS_HOST=memphis
      - HTTP_PORT=4444

  db2:
    image: icr.io/db2_community/db2:11.5.8.0
    platform: linux/amd64
    privileged: true
    ports:
      - "50000:50000"
    volumes:
      - db2_data:/database
    environment:
      - LICENSE=${DB2_LICENSE:-accept}
      - DB2INST1_PASSWORD=${DB2_DBINST1_PASSWORD:-password}
      - DBNAME=${DB2_DBNAME:-spoke}
      - DB2INSTANCE=${DB2_DB2INSTANCE:-db2inst1}
      - BLU=${DB2_BLU:-false}
      - ENABLE_ORACLE_COMPATIBILITY=${DB2_ENABLE_ORACLE_COMPATIBILITY:-false}
      - UPDATEAVAIL=${DB2_UPDATEAVAIL:-NO}
      - TO_CREATE_SAMPLEDB=${DB2_TO_CREATE_SAMPLEDB:-false}
      - SAMPLEDB=${DB2_SAMPLEDB:-false}
      - IS_OSXFS=${DB2_IS_OSXFS:-true}
      - REPODB=${DB2_REPODB:-false}
      - HADR_ENABLED=${DB2_HADR_ENABLED:-false}
      - PERSISTENT_HOME=${DB2_PERSISTENT_HOME:-true}
      - ETCD_ENDPOINT=${DB2_ETCD_ENDPOINT:-}
      - ETCD_USERNAME=${DB2_ETCD_USERNAME:-}
      - ETCD_PASSWORD=${DB2_ETCD_PASSWORD:-}
    healthcheck:
      test: ["CMD", "/opt/ibm/db2/V11.5/bin/db2", "connect to spoke"]
      interval: 10s
      timeout: 10s
      retries: 1000
      start_period: 60s

  postgres:
    image: postgres:15.3-alpine3.18
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    image: mariadb:11.0.2
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      - MARIADB_USER=mariadb
      - MARIADB_PASSWORD=password
      - MARIADB_ROOT_PASSWORD=password

  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3002:3000"

  qryn:
    image: qxip/qryn:v2.3.9

volumes:
  db2_data: {}
  postgres_data: {}
  mariadb_data: {}
  minio_data: {}

networks:
  memphis:
    ipam:
      driver: default
